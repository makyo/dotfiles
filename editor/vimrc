
" General options {{{
set nocompatible        " Use vim features
set nofoldenable        " Don't automatically fold
set showmatch           " Briefly jump to matching brackets
set incsearch           " Incremental search
set autoindent          " Automatically indent
set breakindent         " Softwrap indents with previous line 
set expandtab           " Expand tabs by default
set ts=4 sts=4 sw=4     " Prefer tab width of 4
set formatoptions-=t    " Avoid line breaking normal text
set formatoptions+=cro  " Format comments (wrap, include leaders on newline and o/O)
set number              " Number lines
set splitright splitbelow " Open splits to the right/below (makes more sense to me)
set encoding=utf-8      " Duh
set mouse=nvhi          " Mouse in normal, visual, help, insert
scriptencoding utf-8
" More intuitive baskspacing
set backspace=indent,eol,start

" Get rid of all bells! {{{
set noerrorbells
set visualbell
set t_vb=
" }}}

" }}}

" Load plugins
call pathogen#infect() 

" Display stuff {{{
" Turn on syntax highlighting if our version of vim supports it (i.e. avoid
" errors when running vim.tiny)
if has("syntax")
endif
" }}}

" Mouse stuff {{{
" Hopefully reasonable mouse defaults...  This enables the mouse in normal and
" visual mode, so we can use it to resize windows in normal mode (and, if we
" wish, to select stuff).  It also enables it when editing a help file.  (I'm
" not sure if this is needed, since we'd be in normal mode at that point...)
if has("mouse")
endif
" }}}

" When editing a file, always jump to the last cursor position
autocmd BufReadPost *
  \ if line("'\"") > 0 && line ("'\"") <= line("$") |
  \   exe "normal g'\"" |
  \ endif

" filetype stuff {{{
filetype plugin indent on

au BufRead,BufNewFile *.ledger,*.hledger set ft=ledger
au BufRead,BufNewFile *.handlebars,*.hbs set ft=handlebars
au BufRead,BufNewFile *.less set ft=css
au BufRead,BufNewFile /usr/local/nginx/conf/*,nginx.conf* set ft=nginx ts=4 sw=4 sts=4 et
au BufRead,BufNewFile *.go set ft=go

" Node commands are javascript
autocmd BufRead,BufNewFile * if getline(1) =~ '^.+node$' | setf javascript | endif

" The following use tabwidth 2
autocmd FileType javascript,yaml,coffee,tex,yaml set ts=2 sw=2 sts=2

" The following use literal tab characters.
autocmd FileType go,ledger,make set noet
autocmd FileType make set ts=8 sw=8

" textwidth in an email should be 72 characters
autocmd FileType mail,debchangelog set tw=72

" Writing stuff {{{
autocmd FileType markdown,rst,vimwiki set spell

" Use pencil when writing
autocmd BufRead,BufNewFile *.md,*.mkd set ft=markdown
autocmd FileType plaintex set ft=tex
autocmd FileType plaintex,tex,markdown,vimwiki set wrap linebreak
autocmd FileType plaintex,tex,markdown,vimwiki SoftPencil

" Color name (:help cterm-colors) or ANSI code
let g:limelight_conceal_ctermfg = 'gray'
let g:limelight_conceal_ctermfg = 240

" Color name (:help gui-colors) or RGB color
let g:limelight_conceal_guifg = 'DarkGray'
let g:limelight_conceal_guifg = '#777777'
let g:limelight_paragraph_span = 2

" Limelight just doesn't play well with anything.
autocmd! User GoyoEnter Limelight
autocmd! User GoyoLeave Limelight!
" Gross work-around for Goyo dumping a bunch of settings on exit.
autocmd! User GoyoLeave source ~/.vimrc
" }}}

" Zettelkasten and Vimwiki stuff {{{
let g:vimwiki_list = [{'path': '~/sparkleup/zk/',
                      \ 'auto_tags': 1, 'auto_diary_index': 1, 'auto_export': 1,
                      \ 'path_html': '~/sparkleup/zk_html/',
                      \ 'template_path': '~/sparkleup/zk_html',
                      \ 'syntax': 'markdown', 'ext': '.md',
                      \ 'list_margin': 0,
                      \ 'nested_syntaxes': {'vimwiki': 'markdown'},
                      \ 'custom_wiki2html': 'vwmd'},
                      \ {'path': '~/sparkleup/evergetic.church/',
                      \ 'auto_tags': 1, 'auto_diary_index': 1, 'auto_export': 1,
                      \ 'path_html': '~/sparkleup/evergetic.church_html/',
                      \ 'template_path': '~/sparkleup/evergetic.church_html',
                      \ 'syntax': 'markdown', 'ext': '.md',
                      \ 'list_margin': 0,
                      \ 'nested_syntaxes': {'vimwiki': 'markdown'},
                      \ 'custom_wiki2html': 'vwmd'},
                      \ {'path': '~/work/writing/toledot-arg/',
                      \ 'auto_tags': 1, 'auto_diary_index': 1, 'auto_export': 1,
                      \ 'path_html': '~/work/writing/toledot-arg/html/',
                      \ 'template_path': '~/work/writing/toledot-arg/html/',
                      \ 'syntax': 'markdown', 'ext': '.md',
                      \ 'list_margin': 0,
                      \ 'nested_syntaxes': {'vimwiki': 'markdown'},
                      \ 'custom_wiki2html': 'vwmd'}]
let g:vimwiki_auto_chdir = 1
let g:zettel_format = "%Y-%m-%d-%title-%file_no"
let g:vimwiki_global_ext = 0
let g:vimwiki_use_calendar = 1
" }}}
" }}}

" Stimmtausch
let g:stimmtausch = {'worlds': [
                    \ {'name': 'Taps: Makyo', 'dir': '~/.local/share/stimmtausch/taps_makyo'},
                    \ {'name': 'Taps: Maddy', 'dir': '~/.local/share/stimmtausch/taps_maddy'},
                    \ {'name': 'Taps: Ephah', 'dir': '~/.local/share/stimmtausch/taps_ephah'},
                    \ {'name': 'SPR: Ephah',  'dir': '~/.local/share/stimmtausch/spr_ephah'},
                    \ {'name': 'Furocity: Mina', 'dir': '~/.local/share/stimmtausch/furocity_mina'},
                    \ {'name': 'Furry: Maddy', 'dir': '~/.local/share/stimmtausch/furry_maddy'}]}
nmap <silent> <Leader>st :call Stimmtausch()<CR>
" Editing GPG files
let g:GPGPrimeAgent = 1

" tagbar stuff
let g:tagbar_ctags_bin = '/snap/bin/universal-ctags'

" Themes {{{
syntax on
colo elflord

" Customizations to elflord {{{
hi  Comment term=bold ctermfg=DarkCyan
hi  String  term=underline  ctermfg=103
hi  Operator  ctermfg=204
hi  Statement term=bold ctermfg=LightGreen
hi  Conditional term=bold ctermfg=LightGreen
hi  Repeat  term=bold ctermfg=LightGreen
hi  Todo  term=standout ctermbg=54  ctermfg=LightCyan
hi  clear SpellBad
hi  SpellBad  cterm=underline ctermfg=161
hi  markdownItalic  cterm=italic ctermfg=Magenta
hi  LineNr ctermfg=239
hi  NonText ctermfg=239
hi  Search cterm=italic ctermfg=232 ctermbg=60
let java_highlight_java_lang_ids=1
" }}}

" Minimalist tabline and splits {{{
hi  clear TabLineFill
hi  clear TabLine
hi  clear TabLineSel
hi  TabLineFill cterm=underline ctermfg=239
hi  TabLine cterm=underline ctermfg=242
hi  TabLineSel  cterm=underline ctermfg=241 ctermbg=235
hi  clear VertSplit
hi  VertSplit ctermfg=239
set fillchars+=vert:│
" }}}

" Vimade for fading inactive splits
let g:vimade = {}
let g:vimade.enablesigns = 1
let g:vimade.fadelevel = 0.3

" Airline functionality {{{
let g:airline_powerline_fonts = 1
let g:airline_theme='maddypaws'
let g:airline_minimalist_showmod=1
let g:airline#extensions#battery#enabled=1
let g:airline_left_sep = ''
let g:airline_right_sep = ''
hi  SignColumn ctermbg=None
""" vim-airline provides a tabline formatter, but it's too busy for my tastes.
""" All the same, here's what I was working with before.
"let g:airline#extensions#tabline#enabled = 1
" let g:airline#extensions#tabline#left_sep = ' '
" let g:airline#extensions#tabline#left_alt_sep = '|'
" let g:airline#extensions#tabline#formatter = 'unique_tail_improved'
" }}}
" }}}

" Extra tools {{{
" Shift-arrow keys to move between splits
nmap <silent> <S-Up> :wincmd k<CR>
nmap <silent> <S-Down> :wincmd j<CR>
nmap <silent> <S-Left> :wincmd h<CR>
nmap <silent> <S-Right> :wincmd l<CR>

" Set current split to width of 80
nmap <leader>8 :vertical resize 80<cr>

" Open and close tabs
nmap <leader>t :tabnew<cr>
nmap <leader>C :tabclose<cr>

" \f to start NERDTree
nmap <leader>f :NERDTree<cr>

" F8 for ctags
nmap <F8> :TagbarToggle<CR>

" \w for writemode
nmap <silent> <leader>w :Goyo<cr>

" \we for following wiki link, splitting to do so
nmap <silent> <leader>we :VimwikiVSplitLink 1<cr>
nmap <silent> <leader>wE :VimwikiSplitLink 1<cr>
nmap <silent> <leader>wT :VimwikiTabnewLink<cr>

" \cb for deleting hidden buffers when things slow down
nnoremap <silent> <leader>cb :DeleteHiddenBuffers<cr>

" \/ for clearing highlighting search terms
nmap <silent> <leader>/ :noh<cr>
" }}}

" vim: foldmethod=marker ts=2 sw=2 sts=2 tw=79 et
