#!/usr/bin/env python

import os
import sys

TEMPLATE = """#!/bin/bash

# Move to the project directory and log where we are.
cd {project_dir}
pwd

# Set our SSH script.
export GIT_SSH={sparkleup_dir}/sparkleup-ssh

# Pull any recent changes.
git pull {remote} {branch}

# Push our updates.
git add .
git commit -am "update from sparkleup"
git push {remote} {branch}
"""

USAGE = """Create a sparkleup project

    USAGE: {} <project_dir> [remote] [branch]"""


def main(sparkleup_dir, project_dir, remote, branch):
    project_script = '{}/projects/{}'.format(
        sparkleup_dir,
        project_dir.split('/')[-1])
    if os.path.isfile(project_script):
        print("{} already exists! Not overwriting..."
              "maybe edit it by hand?".format(project_script))
        sys.exit(1)
    with open(project_script, 'w') as f:
        f.write(TEMPLATE.format(
            project_dir=project_dir,
            sparkleup_dir=sparkleup_dir,
            remote=remote,
            branch=branch))
    os.chmod(project_script, 0o744)
    print('Project script created!')
    print('Now you should run `crontab -e` and add the following to that:\n')
    print('\t*/5\t*\t*\t*\t*\t{}'.format(project_script))


if __name__ == '__main__':
    if len(sys.argv) < 2 or len(sys.argv) > 4:
        print(USAGE.format(sys.argv[0]))
        sys.exit(1)
    try:
        remote = sys.argv[2]
    except Exception:
        remote = 'origin'
    try:
        branch = sys.argv[3]
    except Exception:
        branch = 'master'
    main(os.path.dirname(os.path.realpath(__file__)), os.path.abspath(sys.argv[1]), remote, branch)
